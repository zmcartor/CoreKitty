{"name":"Corekitty","tagline":"\"Cat\"egory for Core Data 'findBy' accessors","body":"CoreKitty\r\n========= \r\n\r\n\"Cat\"egory for Core Data 'findBy' accessors\r\n\r\n### Why ?\r\nWriting Core Data lookup boilerplate is a bummer. The *findBy<fieldname>* methods from other dynamic\r\nlanguages make data lookup easy. Other frameworks exist for smoothing over Core Data, however I wanted something\r\neasy and lightweight. \r\n\r\nAlso Metaprogramming in ObjC is fun! :frog:\r\n\r\n### Installation\r\n- Add the NSManagedObject+CoreKitty category to your project. \r\n- #import on any NSManagedObject subclass\r\n- Because of the nature of ARC, selectors you'd like to use need to be declared in either the .h or a private class extension.\r\n It is *not* necessary to declare a findBy selector for every single field in the model.\r\n\r\nExample:\r\n```objc\r\n// MyModel.h\r\n+ (NSArray *)findByFirstName:(NSString *);\r\n+ (NSArray *)findBySomeFieldName:(NSString *);\r\n```\r\nThat's it! Now running :\r\n\r\n```objc\r\nNSArray *results = [MyModel findByName:@\"Homer\"];\r\n```\r\n\r\nWill fetch all people models where name = Homer, autometa-magically!\r\n\r\n### Errata and todos\r\nHas not yet been profiled. Use at your own risk in mission critical apps.\r\n\r\n#### Coming Features \r\n\r\nAdditional 'find' selectors\r\n- findByField1AndField2AndField3 .. etc in a vArgs type list.\r\n- findNot (inverse of findBy)\r\n- support Core Data relational fields\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}